---
# tasks file for cowrie

- name: Cowrie | Insert Apt rule temp 80
  iptables: chain=TCP-OUT protocol=tcp state=present action=insert ctstate=NEW destination_port=80 jump=LOGALLOW
  become: true

- name: Allow | Insert Apt rule temp 80
  iptables: chain=TCP-OUT protocol=tcp state=present action=insert ctstate=NEW destination_port=443 jump=LOGALLOW
  become: true

- name: Cowrie | Install dependencies
  apt:
    name: "{{ item }}"
  become: True
  with_items:
    - "{{ cowrie_apt_dependencies }}"

- include: configure-mysql.yml
  when: cowrie_output_mysql is defined and cowrie_output_mysql

- name: Cowrie | Check if cowrie cwd exists already
  stat:
    path: "{{ cowrie_directory }}"
  register: cowrie_cwd_exists

- name: Cowrie | Check if cowrie exists
  stat:
    path: "{{ cowrie_directory }}/setup.py"
  register: cowrie_exists

- name: Cowrie | Delete cowrie_cwd
  file:
    state: absent
    path: "{{ cowrie_directory }}"
  when: cowrie_cwd_exists.stat.exists is defined and cowrie_cwd_exists.stat.exists
          and cowrie_exists.stat.exists is defined and cowrie_exists.stat.exists == False

- name: Cowrie | Clone cowrie repository
  git:
    repo: https://github.com/micheloosterhof/cowrie.git
    dest: "{{ cowrie_directory }}"
    force: yes
  when: cowrie_exists.stat.exists is defined and cowrie_exists.stat.exists == False
  become: True




- name: Cowrie | Generate password
  shell: date | md5sum | awk '{print $1; }'
  register: cowrie_password
  changed_when: False

- name: Cowrie | Create cowrie user
  user:
    name: cowrie
    home: "{{ cowrie_directory }}"
    password: "{{ cowrie_password.stdout }}"
    update_password: on_create
  become: True

- name: Cowrie | Create virtualenv
  pip:
    virtualenv: "{{ cowrie_directory }}/cowrie-env"
    requirements: "{{ cowrie_directory}}/requirements.txt"
  become: True

- name: Cowrie | Drop Apt rule temp 80
  iptables: chain=TCP-OUT protocol=tcp state=absent action=insert ctstate=NEW destination_port=80 jump=LOGALLOW
  become: true

- name: Cowrie | Drop Apt rule temp 443
  iptables: chain=TCP-OUT protocol=tcp state=absent action=insert ctstate=NEW destination_port=443 jump=LOGALLOW
  become: true

- name: Cowrie | Set directory owner
  file:
    path: "{{ cowrie_directory }}"
    owner: cowrie
    group: cowrie
    recurse: yes
    state: directory
  become: True

- name: Cowrie | Copy configuration file
  template:
    src: cowrie.cfg.j2
    dest: "{{ cowrie_directory }}/cowrie.cfg"
    group: cowrie
    owner: cowrie
  become: True

- name: Cowrie | Restart cowrie
  shell: ./cowrie restart
  args:
    chdir: "{{ cowrie_directory }}/bin"
  become: True
  become_user: cowrie
  ignore_errors: True

- name: Cowrie | Allow SSH in Port 2222
  iptables:
    chain: TCP-IN
    protocol: tcp
    state: present
    action: insert
    ctstate: NEW
    destination_port: 2222
    jump: LOGALLOW
  notify: iptables_save
  become: True

- name: Cowrie | Redirect SSH Port (22) to Port 2222
  iptables:
    table: nat
    chain: PREROUTING
    protocol: tcp
    destination_port: 22
    jump: REDIRECT
    to_ports: 2222
  notify: iptables_save
  become: True

- name: Cowrie | Allow telnet in Port 2223
  iptables:
    chain: TCP-IN
    protocol: tcp
    state: present
    action: insert
    ctstate: NEW
    destination_port: 2223
    jump: LOGALLOW
  notify: iptables_save
  become: True

- name: Cowrie | Redirect SSH Port (22) to Port 2222
  iptables:
    table: nat
    chain: PREROUTING
    protocol: tcp
    destination_port: 23
    jump: REDIRECT
    to_ports: 2223
  notify: iptables_save
  become: True
